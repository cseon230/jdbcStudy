/*==================
 * MemberDAO.java
 ==================*/


package com.test;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import com.util.DBConn;

public class MemberDAO
{
	
	// 주요 속성 구성
	private Connection conn;
	
	// 데이터베이스 연결 담당 메소드
	public Connection connection()
	{
		conn = DBConn.getConnection();
		return conn;
	}
	
	// 데이터 입력 담당 메소드
	public int add(MemberDTO dto) throws SQLException
	{
		int result = 0;
		
		Statement stmt = conn.createStatement();
		
		String sql = String.format("INSERT INTO TBL_EMP (EMP_ID, EMP_NAME, SSN, IBSADATE, CITY_ID, TEL, BUSEO_NAME, JIKWI_NAME, BASICPAY, SUDANG, SAL)"
								+ " VALUES (EMPSEQ.NEXTVAL, '%s', '%s', '%s', '%s', '%s', '%s', '%s', %d, %d, %d)"
								, dto.getName(), dto.getSsn(), dto.getIbsadate(), dto.getCity(), dto.getTel(), dto.getBuseo(), dto.getJikwi(), dto.getBasicpay(), dto.getSudang(), dto.getSal() );
		
		result = stmt.executeUpdate(sql);
		
		stmt.close();
		
		return result;
	}
	
	
	// 직원 전체 출력(사번 정렬)
	public ArrayList<MemberDTO> list_empid() throws SQLException
	{
		ArrayList<MemberDTO> result = new ArrayList<MemberDTO>();
		
		Statement stmt = conn.createStatement();
		
		// 쿼리문 준비
		String sql = "SELECT E.EMP_ID, E.EMP_NAME, E.SSN, E.IBSADATE, C.CITY_NAME, E.TEL, B.BUSEO_NAME AS BUSEO, J.JIKWI_NAME AS JIKWI, E.BASICPAY, E.SUDANG, E.BASICPAY+E.SUDANG AS SAL"
				  + "FROM  TBL_EMP E JOIN TBL_CITY C"
				  + "ON E.CITY_ID = C.CITY_ID"
				  + "JOIN TBL_BUSEO B"
				  + "ON E.BUSEO_ID = B.BUSEO_ID"
				  + "JOIN TBL_JIKWI J"
				  + "ON E.JIKWI_ID = J.JIKWI_ID"
				  + "ORDER BY EMP_ID";
				  
		
		ResultSet rs = stmt.executeQuery(sql);
		
		while (rs.next())
		{
			MemberDTO dto = new MemberDTO();
			
			dto.setEmpid(rs.getInt("EMP_ID"));
			dto.setName(rs.getString("EMP_NAME"));
			dto.setSsn(rs.getString("E.SSN"));
			dto.setIbsadate(rs.getString("E.IBSADATE"));
			dto.setCity(rs.getString("C.CITY_NAME"));
			dto.setTel(rs.getString("E.TEL"));
			dto.setBuseo(rs.getString("BUSEO"));
			dto.setJikwi(rs.getString("JIKWI"));
			dto.setBasicpay(rs.getInt("E.BASICPAY"));
			dto.setSudang(rs.getInt("E.SUDANG"));
			dto.setSal(rs.getInt("E.BAISCPAY"), rs.getInt("E.SUDANG"));
			
			result.add(dto);
			
		}
		
		rs.close();
		stmt.close();
		
		return result;
	}
	
	
	// 직원 전체 출력(이름 정렬)
	public ArrayList<MemberDTO> list_name() throws SQLException
	{
		ArrayList<MemberDTO> result = new ArrayList<MemberDTO>();
		
		Statement stmt = conn.createStatement();
		
		// 쿼리문 준비
		String sql = "SELECT E.EMP_ID, E.EMP_NAME, E.SSN, E.IBSADATE, C.CITY_NAME, E.TEL, B.BUSEO_NAME AS BUSEO, J.JIKWI_NAME AS JIKWI, E.BASICPAY, E.SUDANG, E.BASICPAY+E.SUDANG AS SAL"
				  + "FROM  TBL_EMP E JOIN TBL_CITY C"
				  + "ON E.CITY_ID = C.CITY_ID"
				  + "JOIN TBL_BUSEO B"
				  + "ON E.BUSEO_ID = B.BUSEO_ID"
				  + "JOIN TBL_JIKWI J"
				  + "ON E.JIKWI_ID = J.JIKWI_ID"
				  + "ORDER BY EMP_NAME";
				  
		
		ResultSet rs = stmt.executeQuery(sql);
		
		while (rs.next())
		{
			MemberDTO dto = new MemberDTO();
			
			dto.setEmpid(rs.getInt("EMP_ID"));
			dto.setName(rs.getString("EMP_NAME"));
			dto.setSsn(rs.getString("E.SSN"));
			dto.setIbsadate(rs.getString("E.IBSADATE"));
			dto.setCity(rs.getString("C.CITY_NAME"));
			dto.setTel(rs.getString("E.TEL"));
			dto.setBuseo(rs.getString("BUSEO"));
			dto.setJikwi(rs.getString("JIKWI"));
			dto.setBasicpay(rs.getInt("E.BASICPAY"));
			dto.setSudang(rs.getInt("E.SUDANG"));
			dto.setSal(rs.getInt("E.BAISCPAY"), rs.getInt("E.SUDANG"));
			
			result.add(dto);
			
		}
		
		rs.close();
		stmt.close();
		
		return result;
	}
	
	
	// 직원 전체 출력 (부서 정렬)
	public ArrayList<MemberDTO> list_buseo() throws SQLException
	{
		ArrayList<MemberDTO> result = new ArrayList<MemberDTO>();
		
		Statement stmt = conn.createStatement();
		
		// 쿼리문 준비
		String sql = "SELECT E.EMP_ID, E.EMP_NAME, E.SSN, E.IBSADATE, C.CITY_NAME, E.TEL, B.BUSEO_NAME AS BUSEO, J.JIKWI_NAME AS JIKWI, E.BASICPAY, E.SUDANG, E.BASICPAY+E.SUDANG AS SAL"
				  + "FROM  TBL_EMP E JOIN TBL_CITY C"
				  + "ON E.CITY_ID = C.CITY_ID"
				  + "JOIN TBL_BUSEO B"
				  + "ON E.BUSEO_ID = B.BUSEO_ID"
				  + "JOIN TBL_JIKWI J"
				  + "ON E.JIKWI_ID = J.JIKWI_ID"
				  + "ORDER BY BUSEO";
				  
		
		ResultSet rs = stmt.executeQuery(sql);
		
		while (rs.next())
		{
			MemberDTO dto = new MemberDTO();
			
			dto.setEmpid(rs.getInt("EMP_ID"));
			dto.setName(rs.getString("EMP_NAME"));
			dto.setSsn(rs.getString("E.SSN"));
			dto.setIbsadate(rs.getString("E.IBSADATE"));
			dto.setCity(rs.getString("C.CITY_NAME"));
			dto.setTel(rs.getString("E.TEL"));
			dto.setBuseo(rs.getString("BUSEO"));
			dto.setJikwi(rs.getString("JIKWI"));
			dto.setBasicpay(rs.getInt("E.BASICPAY"));
			dto.setSudang(rs.getInt("E.SUDANG"));
			dto.setSal(rs.getInt("E.BAISCPAY"), rs.getInt("E.SUDANG"));
			
			result.add(dto);
			
		}
		
		rs.close();
		stmt.close();
		
		return result;
	}
	
	
	// 직원 전체 출력 (직위 정렬)
	public ArrayList<MemberDTO> list_jikwi() throws SQLException
	{
		ArrayList<MemberDTO> result = new ArrayList<MemberDTO>();
		
		Statement stmt = conn.createStatement();
		
		// 쿼리문 준비
		String sql = "SELECT E.EMP_ID, E.EMP_NAME, E.SSN, E.IBSADATE, C.CITY_NAME, E.TEL, B.BUSEO_NAME AS BUSEO, J.JIKWI_NAME AS JIKWI, E.BASICPAY, E.SUDANG, E.BASICPAY+E.SUDANG AS SAL"
				  + "FROM  TBL_EMP E JOIN TBL_CITY C"
				  + "ON E.CITY_ID = C.CITY_ID"
				  + "JOIN TBL_BUSEO B"
				  + "ON E.BUSEO_ID = B.BUSEO_ID"
				  + "JOIN TBL_JIKWI J"
				  + "ON E.JIKWI_ID = J.JIKWI_ID"
				  + "ORDER BY JIKWI";
				  
		
		ResultSet rs = stmt.executeQuery(sql);
		
		while (rs.next())
		{
			MemberDTO dto = new MemberDTO();
			
			dto.setEmpid(rs.getInt("EMP_ID"));
			dto.setName(rs.getString("EMP_NAME"));
			dto.setSsn(rs.getString("E.SSN"));
			dto.setIbsadate(rs.getString("E.IBSADATE"));
			dto.setCity(rs.getString("C.CITY_NAME"));
			dto.setTel(rs.getString("E.TEL"));
			dto.setBuseo(rs.getString("BUSEO"));
			dto.setJikwi(rs.getString("JIKWI"));
			dto.setBasicpay(rs.getInt("E.BASICPAY"));
			dto.setSudang(rs.getInt("E.SUDANG"));
			dto.setSal(rs.getInt("E.BAISCPAY"), rs.getInt("E.SUDANG"));
			
			result.add(dto);
			
		}
		
		rs.close();
		stmt.close();
		
		return result;
	}
	
	
	// 직원 전체 출력 (급여 내림차순 정렬)
	public ArrayList<MemberDTO> list_sal() throws SQLException
	{
		ArrayList<MemberDTO> result = new ArrayList<MemberDTO>();
		
		Statement stmt = conn.createStatement();
		
		// 쿼리문 준비
		String sql = "SELECT E.EMP_ID, E.EMP_NAME, E.SSN, E.IBSADATE, C.CITY_NAME, E.TEL, B.BUSEO_NAME AS BUSEO, J.JIKWI_NAME AS JIKWI, E.BASICPAY, E.SUDANG, E.BASICPAY+E.SUDANG AS SAL"
				  + "FROM  TBL_EMP E JOIN TBL_CITY C"
				  + "ON E.CITY_ID = C.CITY_ID"
				  + "JOIN TBL_BUSEO B"
				  + "ON E.BUSEO_ID = B.BUSEO_ID"
				  + "JOIN TBL_JIKWI J"
				  + "ON E.JIKWI_ID = J.JIKWI_ID"
				  + "ORDER BY SAL DESC";
				  
		
		ResultSet rs = stmt.executeQuery(sql);
		
		while (rs.next())
		{
			MemberDTO dto = new MemberDTO();
			
			dto.setEmpid(rs.getInt("EMP_ID"));
			dto.setName(rs.getString("EMP_NAME"));
			dto.setSsn(rs.getString("E.SSN"));
			dto.setIbsadate(rs.getString("E.IBSADATE"));
			dto.setCity(rs.getString("C.CITY_NAME"));
			dto.setTel(rs.getString("E.TEL"));
			dto.setBuseo(rs.getString("BUSEO"));
			dto.setJikwi(rs.getString("JIKWI"));
			dto.setBasicpay(rs.getInt("E.BASICPAY"));
			dto.setSudang(rs.getInt("E.SUDANG"));
			dto.setSal(rs.getInt("E.BAISCPAY"), rs.getInt("E.SUDANG"));
			
			result.add(dto);
			
		}
		
		rs.close();
		stmt.close();
		
		return result;
	}
	
	
	// 인원 수 확인 담당 메소드 
	public int count()
	{
		int result = 0;
		
		Statement stmt = conn.createStatement();
		
		
		
		
		return result; 
	}
}








































































































































































































